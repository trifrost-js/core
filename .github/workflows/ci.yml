name: CI
on:
  push:
    branches: [main]
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
  pull_request:
    branches: [main]
permissions:
  contents: read
jobs:
  audit:
    name: Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: 'npm'
      - name: Install Dependencies
        run: npm ci
      - name: Run Audit
        run: npm audit --omit=dev --audit-level=moderate
  runtimes_node:
    name: Node
    runs-on: ubuntu-latest
    needs: [audit]
    strategy:
      fail-fast: false
      matrix:
        node: [20, 22]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'
      - name: Install Dependencies
        run: npm ci
      - name: Run Lint
        run: npm run lint
      - name: Run Types
        run: npm run types
      - name: Run Tests
        run: npm run test
  runtimes_bun:
    name: Bun
    runs-on: ubuntu-latest
    needs: [audit]
    steps:
      - uses: actions/checkout@v3
      - name: Use Bun
        uses: oven-sh/setup-bun@f4d14e03ff726c06358e5557344e1da148b56cf7 # v1
      - name: Install Dependencies
        run: bun install
      - name: Run Lint
        run: bun run lint
      - name: Run Types
        run: bun run types
      - name: Run Tests
        run: bun run test
  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    needs: [runtimes_node, runtimes_bun]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: 'npm'
      - run: npm ci
      - run: npm run test:coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@b9fd7d16f6d7d1b5d2bec1a2887e65ceed900238 # v4
        with:
          directory: ./coverage/
          fail_ci_if_error: true
          files: ./lcov.info,./lcov-report
          flags: unittests
          name: codecov-umbrella
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
  publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    needs: [coverage]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22
          registry-url: 'https://registry.npmjs.org/'
      - name: Install Dependencies
        run: npm ci
      - name: Prepare distribution
        run: |
          rm -rf ./dist
          mkdir ./dist
          npm run build:esm
          npm run build:cjs
          npm run build:types
          npm run build:jsx
          cp package.json README.md LICENSE.md .npmignore ./dist
      - name: Publish to npm
        run: |
          cd ./dist
          npm publish --access public --verbose
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  website_purge:
    name: Cache Purge
    runs-on: ubuntu-latest
    needs: [publish]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v3
      - name: Purge Cache on TriFrost Website
        env:
          TRIFROST_API_TOKEN: ${{ secrets.TRIFROST_API_TOKEN }}
        run: |
          curl -X POST "https://www.trifrost.dev/news/cache_purge" \
            -H "Content-Type: application/json" \
            -H "x-trifrost-auth: $TRIFROST_API_TOKEN" \
            -d "{}"
  discord_announce:
    name: Announce
    runs-on: ubuntu-latest
    needs: [website_purge]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v3
      - name: Post webhook to Discord
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          VERSION="${GITHUB_REF#refs/tags/}"
          curl -X POST "$DISCORD_WEBHOOK_URL" \
            -H "Content-Type: application/json" \
            -d "{\"content\":\"ðŸš€ **@trifrost/core:${VERSION} has just been published!**\nRead all about it at https://www.trifrost.dev/news/releases/${VERSION}\"}"
